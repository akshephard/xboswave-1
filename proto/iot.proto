syntax = "proto3";

//This is designed to be included by the main xbos proto file and includes the
//definitions for the XBOS IoT devices
//
//Maintainer: Gabe Fierro
//Version 1.0
package xbospb;

message URI {
    string namespace = 1;
    string value = 2;
}

message Triple {
    URI subject = 1;
    URI predicate = 2;
    URI object = 3;
}

enum FanMode {
    FanAuto = 0;
    FanOn = 1;
    FanOff = 2;
}

enum HVACMode {
    HVACModeOff = 0;
    HVACModeHeatOnly = 1;
    HVACModeCoolOnly = 2;
    HVACModeAuto = 3;
}

enum HVACState {
    HVACStateOff = 0;
    HVACStateHeatStage1 = 1;
    HVACStateCoolStage1 = 2;
    HVACStateHeatStage2 = 3;
    HVACStateCoolStage2 = 4;
}

message XBOSIoTMessage {
    // current time at device/service
    //unit:ns
    uint64 time = 1;

    // XBOS IoT devices
    Thermostat thermostat = 2; 
}

message XBOSContextMessage {
    // current time at device/service
    //unit:ns
    uint64 time = 1;
    // any triples this device wants to add about itself
    // these triples will be assumed to be generated by the entity
    // who has created/signed this message
    repeated Triple context = 2;
}

// Thermostat
message Thermostat {
    //Current temperature recorded by thermostat
    //unit:celsius
    double temperature = 1;
    //unit:% rh
    double relative_humidity = 2;
    //If true, then the thermostat is in override mode
    //unit: t/f
    bool override = 3;
    //If true, the fan is on; else it is off
    //unit: t/f
    bool fan_state = 4;
    //Current operating mode of the fan
    //unit: xbos/iot/FanMode
    FanMode fan_mode = 5;
    //Current operating mode of the HVAC
    //unit: xbos/iot/HVACMode
    HVACMode mode = 6;
    //Current HVAC state
    //unit: xbos/iot/HVACState
    HVACState state = 7;
    //number of heat stages enabled
    int32 enabled_heat_stages = 8;
    //number of cool stages enabled
    int32 enabled_cool_stages = 9;
}
