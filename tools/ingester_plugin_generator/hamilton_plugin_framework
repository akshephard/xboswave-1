func build(uri types.SubscriptionURI, name string, msg xbospb.XBOS) types.ExtractedTimeseries {

	value := lookup[name](msg)

	var extracted types.ExtractedTimeseries
	time := int64(msg.HamiltonData.Time)
	extracted.Values = append(extracted.Values, value)
	extracted.Times = append(extracted.Times, time)
	extracted.UUID = types.GenerateUUID(uri, []byte(name))
	parts := strings.Split(uri.Resource, "/")
	extracted.Collection = fmt.Sprintf("hamilton/%s/%s", name, parts[2]) //uri.Resource
	extracted.Tags = map[string]string{
		"unit": "seconds",
		"name": name,
	}
	return extracted
}

func Extract(uri types.SubscriptionURI, msg xbospb.XBOS, add func(types.ExtractedTimeseries) error) error {
	if msg.HamiltonData != nil {
		for name := range lookup {
			extracted := build(uri, name, msg)
			if err := add(extracted); err != nil {
				return err
			}
		}
	}
	return nil
}

